name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy.yml'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  security-check:
    runs-on: ubuntu-latest
    name: Security Check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run Gitleaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Check for secrets in environment files
      run: |
        echo "üîç Checking for potential secrets..."
        
        # Âç±Èô∫„Å™„Éë„Çø„Éº„É≥„Çí„ÉÅ„Çß„ÉÉ„ÇØ
        if find . -name "*.env*" -not -path "./.git/*" -not -path "./node_modules/*" -exec grep -l "aws_access_key\|aws_secret\|password.*=\|token.*=" {} \; 2>/dev/null | grep -q .; then
          echo "‚ö†Ô∏è  WARNING: Potential secrets found!"
          exit 1
        fi
        
        # AWS„Ç¢„ÇØ„Çª„Çπ„Ç≠„Éº„Éë„Çø„Éº„É≥„Çí„ÉÅ„Çß„ÉÉ„ÇØ
        if grep -r "AKIA[0-9A-Z]\{16\}" . --exclude-dir=.git --exclude-dir=node_modules 2>/dev/null; then
          echo "‚ö†Ô∏è  WARNING: Potential AWS Access Key found!"
          exit 1
        fi
        
        echo "‚úÖ Security check passed"

  build-and-deploy:
    needs: security-check
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'

    - name: Install dependencies
      run: npm ci
      working-directory: ./frontend

    - name: Build
      run: npm run build
      working-directory: ./frontend
      env:
        NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
  
    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./frontend/out

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
